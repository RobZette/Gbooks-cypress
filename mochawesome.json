{
  "stats": {
    "suites": 5,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-11T09:02:55.203Z",
    "end": "2022-04-11T09:03:03.665Z",
    "duration": 2714,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fb2a4334-3d92-4994-b00a-72fc2754cad0",
      "title": "",
      "fullFile": "cypress/integration/List-Books/list-not-book.spec.js",
      "file": "cypress/integration/List-Books/list-not-book.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "353888ba-3761-4458-ba2b-260b31c6ea96",
          "title": "Failed test for obtaining a list of books",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return an ampty result",
              "fullTitle": "Failed test for obtaining a list of books should return an ampty result",
              "timedOut": null,
              "duration": 289,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.bookSearch(\"badQuery\").then(response => {\n  expect(response.status).to.eql(200);\n  expect(response.body.totalItems).to.eql(0);\n});",
              "err": {},
              "uuid": "d014bd5c-dfc1-41b2-b3a6-94c19717bbc2",
              "parentUUID": "353888ba-3761-4458-ba2b-260b31c6ea96",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d014bd5c-dfc1-41b2-b3a6-94c19717bbc2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 289,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b8da6f38-020f-4e4b-a8c1-13164de76974",
      "title": "",
      "fullFile": "cypress/integration/List-Books/list-book-isbn.spec.js",
      "file": "cypress/integration/List-Books/list-book-isbn.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2621b8a3-b40a-4e0c-bfb6-03083b58902a",
          "title": "Passing test for obtaining a book with its ISBN code",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return a book with corresponding ISBN",
              "fullTitle": "Passing test for obtaining a book with its ISBN code should return a book with corresponding ISBN",
              "timedOut": null,
              "duration": 335,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let searchedIsbn = \"2848654708\";\ncy.bookSearchISBN(searchedIsbn).then(response => {\n  let volumeInfo = response.body.items[0].volumeInfo.industryIdentifiers;\n  let isbn10;\n  let isbn13;\n  console.log(volumeInfo);\n  if (volumeInfo[0].type == \"ISBN_10\") {\n    isbn10 = volumeInfo[0].identifier;\n    if (volumeInfo.length > 1) {\n      isbn13 = volumeInfo[1].identifier;\n    }\n  } else {\n    isbn10 = volumeInfo[1].identifier;\n    if (volumeInfo.length > 1) {\n      isbn13 = volumeInfo[0].identifier;\n    }\n  }\n  expect(response.status).to.eq(200);\n  if (searchedIsbn.length == 10) {\n    expect(isbn10).to.eq(searchedIsbn);\n  } else if (searchedIsbn.length == 13) {\n    expect(isbn13).to.eq(searchedIsbn);\n  }\n});",
              "err": {},
              "uuid": "6d948707-1afc-4cfa-ba71-d0cebf890860",
              "parentUUID": "2621b8a3-b40a-4e0c-bfb6-03083b58902a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should perform a query and find a book",
              "fullTitle": "Passing test for obtaining a book with its ISBN code should perform a query and find a book",
              "timedOut": null,
              "duration": 568,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let randomIndex;\ncy.request({\n  url: \"/books/v1/volumes\",\n  qs: {\n    q: \"intitle:asterix\"\n  }\n}).then(resp => {\n  expect(resp.status).to.eq(200);\n  expect(resp.body.items).to.be.an(\"array\");\n  expect(resp.body.items.length).to.be.greaterThan(1);\n  randomIndex = Math.floor(Math.random() * resp.body.items.length);\n  let randomId = resp.body.items[randomIndex].id;\n  cy.wrap(randomId).as(\"bookId\");\n});\ncy.get(\"@bookId\").then(bookId => {\n  cy.request(`/books/v1/volumes/${bookId}`);\n}).then(resp => {\n  cy.log(resp.body);\n});",
              "err": {},
              "uuid": "e2368ec9-1958-487e-894c-bf7b15f8171a",
              "parentUUID": "2621b8a3-b40a-4e0c-bfb6-03083b58902a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d948707-1afc-4cfa-ba71-d0cebf890860",
            "e2368ec9-1958-487e-894c-bf7b15f8171a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 903,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "60099c94-d239-4f0f-986e-af08f57c4b14",
      "title": "",
      "fullFile": "cypress/integration/Get-Book/get-book.spec.js",
      "file": "cypress/integration/Get-Book/get-book.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1aac6ec4-a740-407d-8f96-590ccfe94e50",
          "title": "Passing test for access to a book",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return a book with corresponding ID",
              "fullTitle": "Passing test for access to a book should return a book with corresponding ID",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getBook(\"TWKQPwAACAAJ\").then(resp => {\n  expect(resp.status).to.eql(200);\n  expect(resp.body).to.not.be.null;\n  expect(resp.body).to.be.jsonSchema(schema);\n  expect(resp.body.id).to.eql(\"TWKQPwAACAAJ\");\n  expect(resp.body.volumeInfo.title).to.eql(\"Fondation\");\n  expect(resp.body.volumeInfo.authors[0]).to.eql(\"Isaac Asimov\");\n});",
              "err": {},
              "uuid": "e6f4d8d8-4780-434b-9ae9-237d4d1f0a5c",
              "parentUUID": "1aac6ec4-a740-407d-8f96-590ccfe94e50",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e6f4d8d8-4780-434b-9ae9-237d4d1f0a5c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 223,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "686df202-2cb4-489d-b2ce-796679034c4a",
      "title": "",
      "fullFile": "cypress/integration/Get-Book/dont-get-book.spec.js",
      "file": "cypress/integration/Get-Book/dont-get-book.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bd63c84c-8775-4c1e-a894-247e6d172a35",
          "title": "Failed book access test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return a 503 error",
              "fullTitle": "Failed book access test should return a 503 error",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getBook(\"badID\").then(resp => {\n  expect(resp.status).to.eql(503);\n});",
              "err": {},
              "uuid": "c1aa94bc-5842-4e8d-a12e-f3b284929e86",
              "parentUUID": "bd63c84c-8775-4c1e-a894-247e6d172a35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c1aa94bc-5842-4e8d-a12e-f3b284929e86"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 166,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c943eaa7-6f93-4f8e-9dcb-69d9b6526feb",
      "title": "",
      "fullFile": "cypress/integration/List-Books/list-book.spec.js",
      "file": "cypress/integration/List-Books/list-book.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8161ec9f-145b-4cd0-a5fe-1021ce74e77c",
          "title": "Passing test for obtaining a list of books",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "test",
              "fullTitle": "Passing test for obtaining a list of books test",
              "timedOut": null,
              "duration": 1133,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.bookSearch(\"The way of Kings\").then(response => {\n  cy.log(response.body);\n  expect(response.status).to.eq(200);\n  expect(response.body).to.not.be.null; // expect(response.body).to.have.jsonSchema(schema);\n  //expect(response.body.items).to.deep.eq(\"The way of Kings\");\n  expect(response.body).to.be.jsonSchema(schema);\n});",
              "err": {},
              "uuid": "3c60a341-c80e-438d-b6ca-47ca022c1a35",
              "parentUUID": "8161ec9f-145b-4cd0-a5fe-1021ce74e77c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c60a341-c80e-438d-b6ca-47ca022c1a35"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1133,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}